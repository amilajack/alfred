(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{150:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return o}));var n=a(1),l=a(10),r=(a(0),a(161)),b={id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started"},i={id:"getting-started",title:"Getting Started",description:"## Installing",source:"@site/docs/getting-started.md",permalink:"/docs/getting-started",sidebar_label:"Getting Started",sidebar:"docs"},c=[{value:"Installing",id:"installing",children:[]},{value:"Skills",id:"skills",children:[]},{value:"Learning Skills",id:"learning-skills",children:[]},{value:"Alfred Config Example",id:"alfred-config-example",children:[]},{value:"Extending Alfred Configs",id:"extending-alfred-configs",children:[]},{value:"Alfred Libraries Suggesting Skills",id:"alfred-libraries-suggesting-skills",children:[]},{value:"Alfred Skill Example",id:"alfred-skill-example",children:[]},{value:"Passing Flags to Skills",id:"passing-flags-to-skills",children:[]},{value:"Interface Example",id:"interface-example",children:[]},{value:"Roadmap",id:"roadmap",children:[{value:"v1.0.0",id:"v100",children:[]},{value:"Post v1.0.0",id:"post-v100",children:[]}]},{value:"Alfred Skills Implementation Status",id:"alfred-skills-implementation-status",children:[]},{value:"Prior Art",id:"prior-art",children:[]},{value:"Inspiration",id:"inspiration",children:[]},{value:"Philosophy",id:"philosophy",children:[]}],s={rightToc:c};function o(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"installing"},"Installing"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# NPM\nnpm install --global @alfred/cli\n# Yarn\nyarn global add @alfred/cli\n\nalfred new my-new-project\ncd my-new-project\n")),Object(r.b)("h2",{id:"skills"},"Skills"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"alfred start\nalfred build\nalfred format\nalfred test\nalfred migrate\n")),Object(r.b)("h2",{id:"learning-skills"},"Learning Skills"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"# Learning skills\nalfred learn @alfred/skill-react @alfred/skill-redux\n# Build using the new subcommand\nalfred build\n")),Object(r.b)("h2",{id:"alfred-config-example"},"Alfred Config Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsonc"}),'// package.json\n{\n  "alfred": {\n    // Skills that override the default skills\n    "skills": [\n      "@alfred/skill-webpack",\n      "@alfred/skill-testcafe",\n      ["@alfred/skill-eslint", {\n        "rules": {\n          "no-console": "off"\n        }\n      }]\n    ],\n    // Determine to install with NPM or Yarn\n    // Default: \'npm\'\n    "npmClient": "yarn",\n    // Where to write configs to\n    // Default: \'.\' (project root)\n    "configsDir": ".configs",\n    // Write the configs to the configsDir directory\n    // Default: true\n    "showConfigs": true,\n    // Config for all lib targets\n    "lib": {\n      "recommendSkills": ["@alfred/skill-react"]\n    }\n  }\n}\n')),Object(r.b)("h2",{id:"extending-alfred-configs"},"Extending Alfred Configs"),Object(r.b)("p",null,"Suppose you have the following Alfred config:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsonc"}),'// package.json\n{\n  // ...\n  "alfred": {\n    "skills": [\n      "@alfred/skill-parcel",\n      ["@alfred/skill-babel", {\n        // Config for Babel\n        "presets": [\n          "@babel-preset-env",\n          "@babel-preset-flow",\n          "@babel-preset-react"\n        ],\n        "plugins": [\n          "@babel/plugin-proposal-class-properties"\n        ]\n      }],\n      ["@alfred/skill-eslint", {\n        // Config for ESLint\n        "rules": {\n          "no-console": "off"\n        }\n      }]\n    ]\n  }\n}\n')),Object(r.b)("p",null,"This config can be extracted to an Alfred config like so:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsonc"}),'// alfred-config-my-app/package.json\n{\n  "name": "alfred-config-my-app",\n  "version": "0.0.0",\n  "main": "index.json"\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsonc"}),'// alfred-config-my-app/index.json\n{\n  "skills": [\n    "@alfred/skill-parcel",\n    ["@alfred/skill-babel", {\n      "presets": [\n        "@babel-preset-env",\n        "@babel-preset-flow",\n        "@babel-preset-react"\n      ],\n    }],\n    ["@alfred/skill-eslint", {\n      "rules": {\n        "no-console": "off"\n      }\n    }]\n  ]\n}\n')),Object(r.b)("p",null,"This config can be used like so:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsonc"}),'{\n  "alfred": {\n    "extends": "my-app"\n  }\n}\n')),Object(r.b)("h2",{id:"alfred-libraries-suggesting-skills"},"Alfred Libraries Suggesting Skills"),Object(r.b)("p",null,"Assume ",Object(r.b)("inlineCode",{parentName:"p"},"react")," has the following ",Object(r.b)("inlineCode",{parentName:"p"},"package.json"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsonc"}),'{\n  "name": "react",\n  // ...\n  "alfred": {\n    // ...\n    "lib": {\n      "recommendSkills": ["@alfred/skill-react"]\n    }\n  }\n}\n')),Object(r.b)("p",null,"When a author of the app installs ",Object(r.b)("inlineCode",{parentName:"p"},"react"),", Alfred will recommend the skills ",Object(r.b)("inlineCode",{parentName:"p"},"recommendSkills")," on ",Object(r.b)("inlineCode",{parentName:"p"},"postinstall")," of ",Object(r.b)("inlineCode",{parentName:"p"},"react"),". This translates to users of a library automatically having the infra they need to use an app \ud83d\ude32"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),'$ yarn add react\n\n`react` recommends installing the Alfred skill "@alfred/skill-react".\n\nWould you like to install it? (Y/n)\n')),Object(r.b)("h2",{id:"alfred-skill-example"},"Alfred Skill Example"),Object(r.b)("p",null,"The following is an example of an Alfred skill for Babel"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"// index.js\nexport default {\n  // The name that other skills will refer to this skill by\n  name: 'babel',\n  // The (optional) interface that this skill will implement. A skill uses an interface\n  // when it is able to replace an existing subcommand. For example, both the\n  // @alfred/skill-parcel and @alfred/skill-webpack skills, which both register a 'build'\n  // subcommand, will both implement @alfred/interface-build. Implementing it will require\n  // them to adhere to a shared set of calling conventions such as flags, subcommands, etc. In\n  // the case of babel, no interface will be implemented because babel will not be invoked directly\n  // as a subcommand. A bundler will always call babel.\n  interfaces: [],\n  // The dependencies to add to the user's devDependencies\n  devDependencies: {\n    '@babel/cli': '^7.0.0',\n    '@babel/core': '^7.0.0',\n    '@babel/preset': '^7.0.0'\n  },\n  description: 'Transpile JS from ESNext to the latest ES version',\n  // An array of the configs introduced by the skill\n  configs: [\n    {\n      // The name of the config. This should never include a filename extension because skills\n      // have the ability to change extensions (ex. .js -> .ts) so this should not be fixed\n      alias: 'babelrc',\n      // The filename and the path which the config should be written to\n      filename: '.babelrc.js',\n      // The value of the config. Can be an object or a string\n      config: {\n        presets: ['@babel/preset-env']\n      }\n    }\n  ],\n  transforms: {\n    react(babelSkill) {\n      return babelSkill\n        .extendConfig('babel', {\n          presets: ['@babel/preset-react'],\n          env: {\n            production: {\n              plugins: [\n                '@babel/plugin-transform-react-inline-elements',\n              ]\n            },\n            development: {\n              plugins: ['react-hot-loader/babel']\n            }\n          }\n        })\n        .addDevDeps({\n          '@babel/preset-react': '^7.8.3',\n          '@babel/plugin-transform-react-inline-elements': '^7.8.3',\n          'react-hot-loader': '^4.12.19'\n        });\n    }\n  }\n};\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"peerDependencies")," are specified in the ",Object(r.b)("inlineCode",{parentName:"p"},"package.json")," of a skill. They are not ",Object(r.b)("inlineCode",{parentName:"p"},"dependencies")," because by determining dependencies in skills, they can be extended. Users can write their own skills to customize which dependencies they want installed. Customizing dependencies, however, should be considered an antipattern because they use versions of a dependency that may not be supported by a skill."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsonc"}),'// package.json\n{\n  "name": "@alfred/skill-parcel",\n  "peerDependencies": {\n    "react": "^16.0.0"\n  }\n}\n')),Object(r.b)("h2",{id:"passing-flags-to-skills"},"Passing Flags to Skills"),Object(r.b)("p",null,"The following example passes flags to eslint. The example adds a custom formatter to eslint."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"alfred lint --format pretty\n")),Object(r.b)("p",null,"For now, this ",Object(r.b)("strong",{parentName:"p"},"only works when ",Object(r.b)("inlineCode",{parentName:"strong"},"showConfigs")," is set to ",Object(r.b)("inlineCode",{parentName:"strong"},"true")),"."),Object(r.b)("h2",{id:"interface-example"},"Interface Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"// index.js\nexport default {\n  subcommand: 'build',\n  flags: {\n    // Flag name and argument types\n    envs: ['production', 'development', 'test']\n  }\n};\n")),Object(r.b)("h2",{id:"roadmap"},"Roadmap"),Object(r.b)("h3",{id:"v100"},"v1.0.0"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Implement at least one skill for each type of JS infrastructure")),Object(r.b)("h3",{id:"post-v100"},"Post v1.0.0"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"alfred migrate"),": Migration script to Alfred"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"alfred upgrade"),": Upgrade codebase to latest codebase to latest ES version"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"alfred bug"),": Generating bug reports on user's behalf"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"alfred doc"),": Generating documentation that will be rendered to ",Object(r.b)("inlineCode",{parentName:"li"},"README.md")," and html")),Object(r.b)("h2",{id:"alfred-skills-implementation-status"},"Alfred Skills Implementation Status"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Infrastructure"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Skills"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Implemented"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Bundlers"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Webpack, Rollup, Parcel"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2705")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Transpilers"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Babel"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2705")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Test Frameworks"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Jest, Mocha, Jasmine"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2705 \u2705 \u274c")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Formatters"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Prettier"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2705")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Libraries"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Lodash, Moment"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2705")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Linters"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ESLint"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2705")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Front End"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"React, Angular, Vue"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u2705 \u274c")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"State Managment"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Redux, Mobx"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u274c")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Routing"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"react-router"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u274c")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Documentation"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"JSDoc, Typedoc"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u274c")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Type Checkers"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Flow, TypeScript"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u274c")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"End to End Testing"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"TestCafe, Cypress"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"\u274c")))),Object(r.b)("h2",{id:"prior-art"},"Prior Art"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/rust-lang/cargo"}),"Cargo")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://npmjs.org"}),"NPM"),", ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://yarnpkg.com"}),"Yarn")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"http://yeoman.io"}),"Yeoman")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/facebook/create-react-app"}),"create-react-app")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.github.com/react-boilerplate/react-boilerplate"}),"react-boilerplate"),", ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.github.com/electron-react-boilerplate/electron-react-boilerplate"}),"electron-react-boilerplate"),", and ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/search?q=boilerplate"}),"many many other boilerplates"))),Object(r.b)("h2",{id:"inspiration"},"Inspiration"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"http://parceljs.org"}),"parcel")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://elm-lang.org"}),"elm")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/rust-lang/cargo"}),"Cargo")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://npmjs.org"}),"NPM"),", ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://yarnpkg.com"}),"Yarn")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/survivejs/webpack-merge"}),"webpack-merge"))),Object(r.b)("h2",{id:"philosophy"},"Philosophy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"High Level"),Object(r.b)("li",{parentName:"ul"},"Opinionated"),Object(r.b)("li",{parentName:"ul"},"Simplicity"),Object(r.b)("li",{parentName:"ul"},"Reusability")))}o.isMDXComponent=!0}}]);