(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{149:function(e,n,l){"use strict";l.r(n),l.d(n,"frontMatter",(function(){return i})),l.d(n,"metadata",(function(){return o})),l.d(n,"rightToc",(function(){return s})),l.d(n,"default",(function(){return f}));var a=l(1),t=l(10),r=(l(0),l(163)),i={id:"configuration",title:"Configuration"},o={id:"configuration",title:"Configuration",description:"## Alfred Config Example",source:"@site/docs/configuration.md",permalink:"/docs/configuration",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"The Basics",permalink:"/docs/skills"}},s=[{value:"Alfred Config Example",id:"alfred-config-example",children:[]},{value:"Extending Alfred Configs",id:"extending-alfred-configs",children:[]}],c={rightToc:s};function f(e){var n=e.components,l=Object(t.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,l,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"alfred-config-example"},"Alfred Config Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'// package.json\n{\n  "alfred": {\n    // Skills that override the default skills\n    "skills": [\n      "@alfred/skill-webpack",\n      "@alfred/skill-testcafe",\n      ["@alfred/skill-eslint", {\n        "rules": {\n          "no-console": "off"\n        }\n      }]\n    ],\n    // Determine to install with NPM or Yarn\n    // Default: \'npm\'\n    "npmClient": "yarn",\n    // Where to write configs to\n    // Default: \'.\' (project root)\n    "configsDir": ".configs",\n    // Write the configs to the configsDir directory\n    // Default: true\n    "showConfigs": true,\n    // Config for all lib targets\n    "lib": {\n      "recommendSkills": ["@alfred/skill-react"]\n    }\n  }\n}\n')),Object(r.b)("h2",{id:"extending-alfred-configs"},"Extending Alfred Configs"),Object(r.b)("p",null,"Suppose you have the following Alfred config:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'// package.json\n{\n  // ...\n  "alfred": {\n    "skills": [\n      "@alfred/skill-parcel",\n      ["@alfred/skill-babel", {\n        // Config for Babel\n        "presets": [\n          "@babel-preset-env",\n          "@babel-preset-flow",\n          "@babel-preset-react"\n        ],\n        "plugins": [\n          "@babel/plugin-proposal-class-properties"\n        ]\n      }],\n      ["@alfred/skill-eslint", {\n        // Config for ESLint\n        "rules": {\n          "no-console": "off"\n        }\n      }]\n    ]\n  }\n}\n')),Object(r.b)("p",null,"This config can be extracted to an Alfred config like so:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'// alfred-config-my-app/package.json\n{\n  "name": "alfred-config-my-app",\n  "version": "0.0.0",\n  "main": "index.json"\n}\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'// alfred-config-my-app/index.json\n{\n  "skills": [\n    "@alfred/skill-parcel",\n    ["@alfred/skill-babel", {\n      "presets": [\n        "@babel-preset-env",\n        "@babel-preset-flow",\n        "@babel-preset-react"\n      ],\n    }],\n    ["@alfred/skill-eslint", {\n      "rules": {\n        "no-console": "off"\n      }\n    }]\n  ]\n}\n')),Object(r.b)("p",null,"This config can be used like so:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "alfred": {\n    "extends": "my-app"\n  }\n}\n')),Object(r.b)("p",null,"When a author of the app installs ",Object(r.b)("inlineCode",{parentName:"p"},"react"),", Alfred will recommend the skills ",Object(r.b)("inlineCode",{parentName:"p"},"recommendSkills")," on ",Object(r.b)("inlineCode",{parentName:"p"},"postinstall")," of ",Object(r.b)("inlineCode",{parentName:"p"},"react"),". This translates to users of a library automatically having the infra they need to use an app \ud83d\ude32"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),'$ yarn add react\n\n`react` recommends installing the Alfred skill "@alfred/skill-react".\n\nWould you like to install it? (Y/n)\n')))}f.isMDXComponent=!0}}]);