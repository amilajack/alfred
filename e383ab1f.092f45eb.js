(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{162:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return p}));var r=n(1),a=n(10),l=(n(0),n(167)),i={id:"tasks",title:"Tasks"},s={id:"tasks",title:"Tasks",description:"Tasks are what define which [skill](skills) should be used when a specific subcommand is called. For example, when `alfred run build` is called, Alfred needs to decide which skill to run `build` with (either `@alfred/skill-rollup`, `@alfred/skill-parcel`, or `@alfred/skill-webpack`).",source:"@site/docs/tasks.md",permalink:"/docs/tasks",sidebar:"docs",previous:{title:"Files and Directories",permalink:"/docs/files-and-directories"},next:{title:"Writing Skills with TypeScript",permalink:"/docs/writing-skills-with-typescript"}},o=[{value:"Skill with Tasks",id:"skill-with-tasks",children:[]},{value:"Skill with Tasks and Configs",id:"skill-with-tasks-and-configs",children:[]},{value:"Running once for each target",id:"running-once-for-each-target",children:[]},{value:"Resolving a Skill",id:"resolving-a-skill",children:[]}],c={rightToc:o};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Tasks are what define which ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"skills"}),"skill")," should be used when a specific subcommand is called. For example, when ",Object(l.b)("inlineCode",{parentName:"p"},"alfred run build")," is called, Alfred needs to decide which skill to run ",Object(l.b)("inlineCode",{parentName:"p"},"build")," with (either ",Object(l.b)("inlineCode",{parentName:"p"},"@alfred/skill-rollup"),", ",Object(l.b)("inlineCode",{parentName:"p"},"@alfred/skill-parcel"),", or ",Object(l.b)("inlineCode",{parentName:"p"},"@alfred/skill-webpack"),")."),Object(l.b)("h2",{id:"skill-with-tasks"},"Skill with Tasks"),Object(l.b)("p",null,"This is an example of a ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"skills"}),"skill")," for parcel which supports both the ",Object(l.b)("inlineCode",{parentName:"p"},"build")," and ",Object(l.b)("inlineCode",{parentName:"p"},"start")," subcommands:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const skill = {\n  name: 'parcel',\n  tasks: [\n    '@alfred/task-build',\n    '@alfred/task-start'\n  ],\n  // ...\n};\n")),Object(l.b)("h2",{id:"skill-with-tasks-and-configs"},"Skill with Tasks and Configs"),Object(l.b)("p",null,Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"skills"}),"Skills")," can support different platforms and projects. When adding a task to a skill, the task config takes an optional ",Object(l.b)("inlineCode",{parentName:"p"},"supports")," property, which is an object containing the projectss, platforms, and environments the skill supports for th given task."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const supports = {\n  envs: ['production', 'development', 'test'],\n  platforms: ['browser', 'node'],\n  projects: ['app']\n};\n\nconst skill = {\n  name: 'parcel',\n  tasks: [\n    ['@alfred/task-build', { supports }],\n    ['@alfred/task-start', { supports }]\n  ],\n  // ...\n};\n")),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"supports")," is not passed, Alfred will assume the task supports all platforms, projects, and environments."),Object(l.b)("h2",{id:"running-once-for-each-target"},"Running once for each target"),Object(l.b)("p",null,"Certain tasks need to be run once for each ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"migrating-to-alfred#targets"}),"target"),". One example of this is the ",Object(l.b)("inlineCode",{parentName:"p"},"@alfred/task-build")," task, which need to build each ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"migrating-to-alfred#targets"}),"target")," it supports. The ",Object(l.b)("inlineCode",{parentName:"p"},"@alfred/task-lint")," task only needs to be run once for all targets."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"// Running once for each target\nmodule.exports = {\n  subcommand: 'build',\n  description: 'Build, optimize, and bundle assets in your app',\n  runForEachTarget: true,\n  resolveSkill(skills, target) {\n    // ...\n  }\n};\n\n")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"// Running once for all targets\nmodule.exports = {\n  subcommand: 'lint',\n  description: 'Lint your app',\n  runForEachTarget: false,\n  resolveSkill(skills) {\n    // ...\n  }\n};\n")),Object(l.b)("h2",{id:"resolving-a-skill"},"Resolving a Skill"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"resolveSkill")," takes an array of ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"skills"}),"Skills")," and returns the skill to be resolved. If ",Object(l.b)("inlineCode",{parentName:"p"},"runForEachTarget")," is true, a target paramater is passed to ",Object(l.b)("inlineCode",{parentName:"p"},"resolveSkill"),"."))}p.isMDXComponent=!0},167:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},d=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,f=d["".concat(i,".").concat(u)]||d[u]||b[u]||l;return n?a.a.createElement(f,s({ref:t},c,{components:n})):a.a.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<l;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);